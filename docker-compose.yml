version: '3.9'

services:
  postgres-order:
    image: postgres:15
    container_name: postgres-order
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: postgresorderdb
      POSTGRES_PASSWORD: OrderDb12345.
    ports:
      - "5433:5432"
    volumes:
      - pgdata_order:/var/lib/postgresql/data

  postgres-shipping:
    image: postgres:15
    container_name: postgres-shipping
    environment:
      POSTGRES_DB: shippingdb
      POSTGRES_USER: postgresshippingdb
      POSTGRES_PASSWORD: ShippingDb12345.
    ports:
      - "5434:5432"
    volumes:
      - pgdata_shipping:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # management UI

  orderservice:
    container_name: orderservice
    build:
      context: .
      dockerfile: OrderService/src/OrderService.API/Dockerfile
    ports:
      - "5001:8080"
    depends_on:
      - postgres-order
      - rabbitmq
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__OrderDb: Host=postgres-order;Port=5432;Database=orderdb;Username=postgresorderdb;Password=OrderDb12345.
      ConnectionStrings__RabbitMq: rabbitmq

  shippingservice:
    container_name: shippingservice
    build:
      context: .
      dockerfile: ShippingService/src/ShippingService.API/Dockerfile
    ports:
      - "5002:8080"
    depends_on:
      - postgres-shipping
      - redis
      - rabbitmq
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__ShippingDb: Host=postgres-shipping;Port=5432;Database=shippingdb;Username=postgresshippingdb;Password=ShippingDb12345.
      ConnectionStrings__Redis: redis:6379
      ConnectionStrings__RabbitMq: rabbitmq

volumes:
  pgdata_order:
  pgdata_shipping: